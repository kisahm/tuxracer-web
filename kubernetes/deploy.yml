---
apiVersion: v1
kind: Namespace
metadata:
  name: tuxracer
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: tuxracer
  namespace: tuxracer
spec:
  selector:
    matchLabels:
      app: tuxracer
  replicas: 1
  template:
    metadata:
      labels:
        app: tuxracer
        live.cast.ai/migrate: "true"
    spec:
      containers:
      - name: tuxracer
        image: docker.io/kisahm/tuxracer-web:v0.3
        env: 
          - name: RESOLUTION
            value: "800x600"
          - name: PASSWORD
            value: "live"
          - name: VERBOSE
            value: "0"
        ports: 
          - containerPort: 80
            name: http
        resources:
          requests:
            cpu: 1
            memory: 1Gi
      nodeSelector:
        scheduling.cast.ai/node-template: "live"
      tolerations:
        - key: "scheduling.cast.ai/node-template"
          value: "live"
          operator: "Equal"
          effect: "NoSchedule"
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: tuxracer
  name: tuxracer
  namespace: tuxracer
spec:
  type: ClusterIP
  ports:
  - name: http
    port: 80
    protocol: TCP
    targetPort: http
  selector:
    app: tuxracer
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: nginx
  namespace: tuxracer
data:
  default.conf: |
    server {
    listen 80 default_server;

    root /var/www/html;
    index index.html;
    server_name _;

    location / {
          proxy_http_version 1.1;
          # x11vnc supports websockets out of the box
          proxy_pass http://tuxracer:80/;
          proxy_set_header Upgrade $http_upgrade;
          proxy_set_header Connection "upgrade";
          proxy_read_timeout 61s;
          proxy_buffering off;
        }
    } 
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nginx
  namespace: tuxracer
spec:
  selector:
    matchLabels:
      app: nginx
  replicas: 1
  template:
    metadata:
      labels:
        app: nginx
        live.cast.ai/migrate: "true"
    spec:
      containers:
      - name: nginx
        image: nginx
        ports: 
          - containerPort: 80
            name: http
        resources:
          requests:
            cpu: 0.2
            memory: 128Mi
        volumeMounts:
        - name: nginx
          mountPath: /etc/nginx/conf.d/default.conf 
          subPath: default.conf
      nodeSelector:
        scheduling.cast.ai/node-template: "live"
      tolerations:
        - key: "scheduling.cast.ai/node-template"
          value: "live"
          operator: "Equal"
          effect: "NoSchedule"
      volumes:
        - name: nginx
          configMap:
            name: nginx
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: nginx
  name: nginx
  namespace: tuxracer
spec:
  type: LoadBalancer
  ports:
  - name: http
    port: 80
    protocol: TCP
    targetPort: http
  selector:
    app: nginx